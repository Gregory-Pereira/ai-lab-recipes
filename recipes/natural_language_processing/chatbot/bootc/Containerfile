# Example: an AI powered sample application is embedded as a systemd service
# via Podman quadlet files in /usr/share/containers/systemd
#
# Use build command:
# podman build --build-arg "sshpubkey=$(cat $HOME/.ssh/mykey.pub)" -t quay.io/exampleos/chatbot .
# The --build-arg "SSHPUBKEY=$(cat ~/.ssh/mykey.pub)" option inserts your
# public key into the image, allowing root access via ssh.

FROM quay.io/centos-bootc/centos-bootc:stream9
ARG SSHPUBKEY
ARG MODEL-SERVER-IMAGE=quay.io/redhat-et/locallm-model-service:latest

RUN mkdir /usr/etc-system && \
    echo 'AuthorizedKeysFile /usr/etc-system/%u.keys' >> /etc/ssh/sshd_config.d/30-auth-system.conf && \
    echo ${SSHPUBKEY} > /usr/etc-system/root.keys && chmod 0600 /usr/etc-system/root.keys

RUN dnf -y update && (dnf install -y vim || true) && dnf clean all

# Add quadlet files to setup system to automatically run AI application on boot
COPY ../quadlet/chatbot.kube /usr/share/containers/systemd/chatbot.kube
COPY ../quadlet/chatbot.yaml /usr/share/containers/systemd/chatbot.yaml
COPY ../quadlet/chatbot.image /usr/share/containers/systemd/chatbot.image

# pre-pull workload images:
# Comment the pull commands to keep bootc image smaller.
# The quadlet .image file added above pulls following images on boot if not
# pre-pulled here
RUN podman pull quay.io/redhat-et/ai-model:latest
RUN podman pull ${MODEL-SERVER-IMAGE}
RUN podman pull quay.io/redhat-et/chatbot:latest
