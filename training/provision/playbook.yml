---
- name: Test Environment Provisioning
  hosts: test_environments
  remote_user: ec2-user
  become: true
  gather_facts: false

  tasks:
  
  - name: Wait until the instance is ready
    ansible.builtin.wait_for_connection:
    delay: 15
    timeout: 180
  
  - name: Gather facts for first time
    ansible.builtin.setup:

  - name: Required packages
    ansible.builtin.dnf:
      name:
      - podman
      state: present
      disable_gpg_check: true

  - name: Temp Image Containerfile
    ansible.builtin.template:
      src: ./templates/Containerfile.j2
      dest: /tmp/Containerfile

  - name: Login to default registry
    containers.podman.podman_login:
      username: "{{ registry_user }}"
      password: "{{ registry_password }}"
      registry: quay.io
      authfile: /etc/containers/auth.json

  - name: Pull the parent image
    async: 1000
    poll: 0
    register: pull_result
    containers.podman.podman_image:
      name: "quay.io/ai-lab/{{ image_name }}:latest"
      pull: true
      auth_file: /etc/containers/auth.json
      arch: amd64
      state: present

  - name: Check on parent image pull
    async_status:
      jid: "{{ pull_result.ansible_job_id }}"
    register: job_result
    until: job_result.finished
    retries: 100
    delay: 10

  - name: Check the images was pulled
    ansible.builtin.command:
      cmd: |
        podman images -a

  # - name: Simulate long running op (15 sec), wait for up to 45 sec, poll every 5 sec
  #   ansible.builtin.command: /bin/sleep 15
  #   async: 45
  #   poll: 5

  # - name: Build Temp image
  #   containers.podman.podman_image:
  #     name: "quay.io/ai-lab/{{ image_name }}:latest"
  #     build:
  #       target: temp_image
  #       file: /tmp/Containerfile
  #     state: build
  #     auth_file: /etc/containers/auth.json

  # - name: Pause for 5 minutes
  #   ansible.builtin.pause:
  #     minutes: 5

  # - name: Building an image with ssh key
  #   ansible.builtin.command:
  #     cmd: |
  #       podman build -t localhost/temp_image:latest -f /tmp/Containerfile

  # - name: check podman images for sanity
  #   ansible.builtin.command:
  #     cmd: |
  #       podman images 

  # - name: Bootc install
  #   ignore_unreachable: true
  #   containers.podman.podman_container:
  #     name: "{{ image_name }}"
  #     image: localhost/temp_image:latest
  #     state: started
  #     auto_remove: yes
  #     cap_add:
  #       - sys_admin
  #     security_opt:
  #       - "label=type:unconfined_t"
  #     volumes:
  #       - "/:/target"
  #       - "/var/lib/containers:/var/lib/containers"
  #     privileged: yes
  #     pid_mode: host
  #     command: "bootc install to-filesystem --karg=console=ttyS0,115200n8 --replace=alongside /target"

  # - name: Restart instance
  #   ansible.builtin.reboot:
  #     test_command: which ilab
